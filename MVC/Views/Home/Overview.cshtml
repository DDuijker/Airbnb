@model MVC.ViewModels.OverviewView
    <link  rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.6.3/flowbite.min.css" />
<h1>@ViewData["Title"]</h1>

<div class="container flex mx-auto max-w-wd flex-wrap flex-row justify-center gap-5">
    <div class="w-full absolute justify-center p-5 h-20 flex bg-red-400">
         
        @*start*@
<div class="flex w23 justify-center">
      @*  <label for="search-dropdown" class="mb-2 text-sm font-medium text-gray-900 sr-only dark:text-white">Your Email</label>
        <button id="dropdown-button" data-dropdown-toggle="dropdown" class="flex-shrink-0 z-10 inline-flex items-center py-2.5 px-4 text-sm font-medium text-center text-gray-900 bg-gray-100 border border-gray-300 rounded-l-lg hover:bg-gray-200 focus:ring-4 focus:outline-none focus:ring-gray-100 dark:bg-gray-700 dark:hover:bg-gray-600 dark:focus:ring-gray-700 dark:text-white dark:border-gray-600" type="button">All cities </button>
        <div id="dropdown" class="z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700">
            <ul class="py-2 text-sm text-gray-700 dark:text-gray-200" aria-labelledby="dropdown-button">
            <li>
                <button type="button" class="inline-flex w-full px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Mockups</button>
            </li>
            <li>
                <button type="button" class="inline-flex w-full px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Templates</button>
            </li>
            <li>
                <button type="button" class="inline-flex w-full px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Design</button>
            </li>
            <li>
                <button type="button" class="inline-flex w-full px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Logos</button>
            </li>
            </ul>
        </div>*@

<button id="multiLevelDropdownButton" data-dropdown-toggle="dropdown" class="text-white bg-red-500 hover:bg-red-600 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-l-lg text-sm px-4 py-2.5 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800" type="button">Filters </button>
<!-- Dropdown menu -->
<div id="dropdown" class="z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700">
    <ul class="py-2 text-sm text-gray-700 dark:text-gray-200" aria-labelledby="multiLevelDropdownButton">
      <li>
       <button id="doubleDropdownButton" data-dropdown-toggle="doubleDropdownCountry" data-dropdown-placement="right-start" type="button" class="flex items-center justify-between w-full px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Countries</button>
          <div id="doubleDropdownCountry" class="z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700">
            <ul class="py-2 text-sm text-gray-700 dark:text-gray-200" aria-labelledby="doubleDropdownButton">
                                @foreach (var country in Model.UniqueCountries)
                                {
                           <li>
                        <a href="/home/overview/@country/Country" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">@country</a>
                      </li>
                                }
            </ul>
        </div>
      </li>
       <li>
       <button id="doubleDropdownButton" data-dropdown-toggle="doubleDropdownRooms" data-dropdown-placement="right-start" type="button" class="flex items-center justify-between w-full px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Rooms</button>
          <div id="doubleDropdownRooms" class="z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700">
            <ul class="py-2 text-sm text-gray-700 dark:text-gray-200" aria-labelledby="doubleDropdownButton">
                                @foreach (var room in Model.UniqueRooms)
                                {
                               <li>
                            <a href="/home/overview/@room/Rooms" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">@room</a>
                          </li>
                                }
            </ul>
        </div>
      </li>
       <li>
       <button id="doubleDropdownButton" data-dropdown-toggle="doubleDropdownBeds" data-dropdown-placement="right-start" type="button" class="flex items-center justify-between w-full px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Beds</button>
          <div id="doubleDropdownBeds" class="z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700">
            <ul class="py-2 text-sm text-gray-700 dark:text-gray-200" aria-labelledby="doubleDropdownButton">
                                @foreach (var bed in Model.UniqueBeds)
                                {
                                   <li>
                                <a href="/home/overview/@bed/Beds" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">@bed</a>
                              </li>
                                }
            </ul>
        </div>
      </li>
       <li>
       <button id="doubleDropdownButton" data-dropdown-toggle="doubleDropdownBathooms" data-dropdown-placement="right-start" type="button" class="flex items-center justify-between w-full px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Bathrooms</button>
          <div id="doubleDropdownBathooms" class="z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700">
            <ul class="py-2 text-sm text-gray-700 dark:text-gray-200" aria-labelledby="doubleDropdownButton">
                                @foreach (var bathroom in Model.UniqueBathrooms)
                                {
                                   <li>
                                <a href="/home/overview/@bathroom/Bathrooms" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">@bathroom</a>
                              </li>
                                }
            </ul>
        </div>
      </li>
      <li>
        <button id="doubleDropdownButton" data-dropdown-toggle="doubleDropdownCity" data-dropdown-placement="right-start" type="button" class="flex items-center justify-between w-full px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Cities</button>
          <div id="doubleDropdownCity" class="z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700">
            <ul class="py-2 text-sm text-gray-700 dark:text-gray-200" aria-labelledby="doubleDropdownButton">
              @foreach(var city in Model.UniqueCities){
                       <li>
                    <a href="/home/overview/@city/City" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">@city</a>
                  </li>
              }
            </ul>
        </div>
      </li>
      <li>
        <button id="doubleDropdownButton" data-dropdown-toggle="doubleDropdownType" data-dropdown-placement="right-start" type="button" class="flex items-center justify-between w-full px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Type</button>
          <div id="doubleDropdownType" class="z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700">
            <ul class="py-2 text-sm text-gray-700 dark:text-gray-200" aria-labelledby="doubleDropdownButton">
              @foreach(var type in Model.UniqueTypes){
                       <li>
                    <a href="/home/overview/@type/Type" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">@type</a>
                  </li>
              }
            </ul>
        </div>
      </li>
      <li>
          <div class="p-2">
            <label id="priceRangeLable" for="default-range" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Price: @Model.CheapestProperty</label>
                  
            <input id="default-range" type="range" value="0" class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700">
            <div class="flex w-full h-5 justify-between">
                <h1 id="cheapest">@Model.CheapestProperty</h1>
                <h1 id="mostExpensive">@Model.MostExpensiveProperty</h1>
            </div>  
                <button id="rangeApply" class="flex items-center justify-between w-full px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Apply</button>
        </div>
      </li>
    </ul>
</div>

        <div class="relative w-full">
            <input type="search" id="search-dropdown" class="block p-2.5 w-full z-20 text-sm text-gray-900 bg-gray-50 rounded-r-lg border-l-gray-50 border-l-2 border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-l-gray-700  dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:border-blue-500" placeholder="Search Cities, Names, Addresses Zip..." required>
            
        </div>
        @if(Model.Mode == "search") {

        <div class="flex flex-col text-center w-1/2  justify-center flex-wrap">
              
                <a href="/home/Overview" class="text-white bg-red-500 hover:bg-white focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Remove filters</a>
            </div>
        }
    </div>

    @*end*@

         
    </div>

    <div class="container flex  mx-auto max-w-wd flex-wrap flex-row justify-center gap-5 bottom-5">
        <div class="h-1/2 w-full bg-blue-500 m6rem"></div>
    @if (Model.Mode == "overview"){
            @foreach (var item in Model.Properties)
            {
                <div class="max-w-sm min-w-sm   w-1/2 bg-slate-200 border border-gray-200 rounded-lg mx-2 mb-6 shadow dark:bg-gray-800 dark:border-gray-700">
                    <div class="p-5 flex flex-col h-full justify-between">
                        <a href="#">
                            <h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white"> @Html.DisplayFor(modelItem => item.Title)</h5>
                        </a>
                        <p class="mb-3  font-normal text-gray-700 dark:text-gray-400">@Html.DisplayFor(modelItem => item.Address)  - Rooms: (@Html.DisplayFor(modelItem => item.NumberOfRooms))</p>    
                        <p class="mb-3  font-normal text-gray-700 dark:text-gray-400">@Html.DisplayFor(modelItem => item.City)</p> 
                        <p class="mb-3  font-normal text-gray-700 dark:text-gray-400">@Html.DisplayFor(modelItem => item.Description)</p>
                        <div class="flex items-center justify-between">
                            <p> <span class="text-3xl font-bold text-gray-900 dark:text-white">$@Html.DisplayFor(modelItem => item.Price)</span> per night</p>
                            <a href="/Properties/Details/@item.Id" class="text-white bg-red-400 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Visit page</a>
                        </div>
                    </div>
                </div>
            }
    } 
    @if(Model.Mode == "search") {
        @if (Model.SortedProperties.Count() == 0 ){
            <div class="flex flex-col text-center w-1/3  justify-center flex-wrap">
                <h1>No properties found with that address</h1>
            </div>
        } else {
       
    @foreach (var item in Model.SortedProperties) {
        <div class="max-w-sm min-w-sm   w-1/2 bg-slate-200 border border-gray-200 rounded-lg mx-2 mb-6 shadow dark:bg-gray-800 dark:border-gray-700">
        <div class="p-5 flex flex-col h-full justify-between">
            <a href="#">
                <h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white"> @Html.DisplayFor(modelItem => item.Title)</h5>
            </a>
            <p class="mb-3  font-normal text-gray-700 dark:text-gray-400">@Html.DisplayFor(modelItem => item.Address)  - Rooms: (@Html.DisplayFor(modelItem => item.NumberOfRooms))</p>
            <p class="mb-3  font-normal text-gray-700 dark:text-gray-400">@Html.DisplayFor(modelItem => item.City)</p>    
            <p class="mb-3  font-normal text-gray-700 dark:text-gray-400">@Html.DisplayFor(modelItem => item.Description)</p>
            <div class="flex items-center justify-between">
                <p> <span class="text-3xl font-bold text-gray-900 dark:text-white">$@Html.DisplayFor(modelItem => item.Price)</span> per night</p>
                <a href="/Properties/Details/@item.Id" class="text-white bg-red-400 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Visit page</a>
            </div>
        </div>
    </div>
    }
        }

    }
 
    </div>

</div>



<script>
    let search = document.getElementById('search-dropdown')
    console.log(search)
    search.addEventListener('change', (e) => {
    window.location.href = `/Home/Overview/${search.value}/Search`

    })
    let priceRange = document.getElementById('default-range')

    priceRange.addEventListener('change', (e) => {
        let cheapest = document.getElementById('cheapest').textContent
        let mostExpensive = document.getElementById('mostExpensive').textContent

        let actualPrice = Math.round((priceRange.value / 100) * mostExpensive)

        let diff = parseInt(mostExpensive) - parseInt(cheapest)
        console.log(diff, (priceRange.value / 100) * diff)

        actualPrice = parseInt(cheapest) + parseInt((priceRange.value / 100) * diff)

        document.getElementById('priceRangeLable').textContent = `Price: ${cheapest} - ${actualPrice}`

        let rangeApply = document.getElementById('rangeApply')
        rangeApply.addEventListener('click', () => {
            window.location.href = `/Home/Overview/${actualPrice}/Price`
            })
    })

</script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.6.3/flowbite.min.js"></script>
